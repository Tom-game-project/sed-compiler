# メインの分岐処理
/^add [01]* [01]*/ b prepare_add
#/^sub /b prepare_sub
b done 
# 上記以外は何もせず終了


# --- add の準備処理 ---
:prepare_add
x
# 戻り先として「:done」をホールドスペースに設定
s/.*/:done/
x
# 入力をaddloopの形式に変換
s/^add \([01]*\) \([01]*\)$/add 0;;\1;\2;/
b addloop

:addloop
s/add 1;\([01]*\);;;/1\1/
s/add 0;\([01]*\);;;/\1/
s/add \([01]\);\([01]*\);\([01]*\);;/add \1;\2;\3;0;/
s/add \([01]\);\([01]*\);;\([01]*\);/add \1;\2;0;\3;/
s/add \([01]\);\([01]*\);\([01]*\)\([01]\);\([01]*\)\([01]\);/add \1\4\6;\2;\3;\5;/
#        1;           2;         3         4;        5       6; 

#            1 ;       2 ;       3 ;
s/add 000;\([01]*\);\([01]*\);\([01]*\);/add 0;0\1;\2;\3;/
s/add 001;\([01]*\);\([01]*\);\([01]*\);/add 0;1\1;\2;\3;/
s/add 010;\([01]*\);\([01]*\);\([01]*\);/add 0;1\1;\2;\3;/
s/add 011;\([01]*\);\([01]*\);\([01]*\);/add 1;0\1;\2;\3;/
s/add 100;\([01]*\);\([01]*\);\([01]*\);/add 0;1\1;\2;\3;/
s/add 101;\([01]*\);\([01]*\);\([01]*\);/add 1;0\1;\2;\3;/
s/add 110;\([01]*\);\([01]*\);\([01]*\);/add 1;0\1;\2;\3;/
s/add 111;\([01]*\);\([01]*\);\([01]*\);/add 1;1\1;\2;\3;/

taddloop

:return_dispatcher
# ホールドスペースから戻り先ラベルを取得
x # 結果をHSへ、戻り先情報をPSへ
s/\n.*// # 戻り先ラベルだけ残す
# 戻り先に応じて分岐
#/^:sub_step2$/ { x; b sub_step2; }
/:done$/ x; b done;


:done
